from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (
    QApplication,
    QWidget,
    QHBoxLayout,
    QVBoxLayout,
    QGroupBox,
    QRadioButton,
    QPushButton,
    QLineEdit,
    QLabel)
from PyQt5 import QtGui
from PIL import Image
from PIL import ImageFilter
from PIL import ImageEnhance
import pywinstyles
from jryj import *


def show_info(lable, line_edit):
    image_name = line_edit.text()
    massege = im(image_name)
    lable.setText(massege)

stfb = """
    QPushButton {
        color:white;
        border-color: white;
        border-radius: 5px;
        border-width:1px;
        padding:10 px;
        border-style: outset;
        font-weight: 600;
        font-size: 30px;
    }
    QPushButton:hover {
        color:white;
        border: 1px solid white;
        font-weight: 700;
        
    }
    QPushButton:focus {
        color:gray;
        border: 1px solid gray;
        border-color: gray;
    }
    """

app = QApplication([])
window = QWidget()
window.setStyleSheet("background:black;")
layout = QVBoxLayout()
lable_info = QLabel("")
lable_info.setStyleSheet("color: white;")
window.setWindowTitle('НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ  НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫНЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ')
window.setWindowIcon(QtGui.QIcon('негр.jpg'))
pywinstyles.apply_style(window, 'dark')


input_image = QLineEdit()
input_image.setStyleSheet('color:white;border:2px solid gray;padding: 5px;font-size:30px')
input_image.setPlaceholderText('НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ НЕГРЫ Н')
layout.addWidget(input_image)



layoutv1= QVBoxLayout()
layout1 = QHBoxLayout()
layout2 = QHBoxLayout()
layoutv1.addLayout(layout1)
layoutv1.addLayout(layout2)
layout.addLayout(layoutv1)

t1 = QPushButton('изображению')
t1.setStyleSheet(stfb)
t1.clicked.connect(
    lambda: show_info(lable_info, input_image)
)
layout1.addWidget(t1)


t2 = QPushButton('черно-белым')
t2.setStyleSheet(stfb)
t2.clicked.connect(lambda: mbw(input_image))
layout1.addWidget(t2)

t3 = QPushButton('карандашом')
t3.setStyleSheet(stfb)
t3.clicked.connect(lambda: contour(input_image))
layout1.addWidget(t3)

t4 = QPushButton('тиснение')
t4.setStyleSheet(stfb)
t4.clicked.connect(lambda: emboss(input_image))
layout2.addWidget(t4)

t5 = QPushButton('отзеркаливание')
t5.setStyleSheet(stfb)
t5.clicked.connect(lambda: flip(input_image))
layout2.addWidget(t5)

t6 = QPushButton('разворот')
t6.setStyleSheet(stfb)
t6.clicked.connect(lambda: blur(input_image))
layout2.addWidget(t6)




layout.addWidget(lable_info)
window.setLayout(layout)
window.show()
window.resize(900,200)
app.exec_()
